datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

enum UserRole {
  OWNER
  ADMIN
  MODERATOR
  DEVELOPER
  WRITER
  SUPPORTER
  DEFAULT
}

model User {
  id String @id @default(cuid())

  name        String   @unique @map("username")
  enabled     Boolean  @default(false)
  avatarUrl   String?
  accentColor String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles    UserRoles[]
  password Password?

  posts       Post[] @relation("AuthoredPosts")
  editedPosts Post[] @relation("EditedPosts")
}

model UserRoles {
  userId String
  title  UserRole @default(DEFAULT)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, title])
}

model Password {
  userId String @unique
  hash   String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// Posts

enum PostType {
  CHARACTER_GUIDE
  GENERAL_GUIDE
  GENERAL
}

enum PostStatus {
  PUBLISHED
  AWAITING_APPROVAL
  HIDDEN
}

model Post {
  id           String       @id @default(cuid())
  slug         String       @unique
  authorId     String?
  type         PostType     @default(GENERAL)
  status       PostStatus   @default(PUBLISHED)
  publishedAt  DateTime     @default(now())
  editedAt     DateTime?
  editorId     String?
  title        String
  description  String?
  tags         String
  thumbnailUrl String?
  lang         String       @db.VarChar(2)
  content      PostContent?

  editor User? @relation(fields: [editorId], references: [id], name: "EditedPosts")
  author User? @relation(fields: [authorId], references: [id], name: "AuthoredPosts")
}

model PostContent {
  id     String @id @default(cuid())
  postId String @unique
  raw    String

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

// Genshin specific models

enum GenshinVision {
  PYRO
  HYDRO
  ELECTRO
  CRYO
  DENDRO
  ANEMO
  GEO
}

enum GenshinWeapon {
  SWORD
  CLAYMORE
  BOW
  CATALYST
  POLEARM
}

model GenshinCharacter {
  id             String                           @id @default(cuid())
  accentColor    String                           @db.VarChar(7)
  birthDay       Int
  birthMonth     Int
  rarity         Int
  vision         GenshinVision
  weapon         GenshinWeapon
  identity       GenshinCharacterIdentity[]
  constellations GenshinCharacterConstellations[]
}

model GenshinCharacterIdentity {
  id                 String  @id
  lang               String  @db.VarChar(2)
  genshinCharacterId String?
  name               String
  description        String

  GenshinCharacter GenshinCharacter? @relation(fields: [genshinCharacterId], references: [id], onDelete: Cascade)

  @@unique([lang, genshinCharacterId])
}

model GenshinCharacterConstellations {
  id                 String  @id @default(cuid())
  lang               String  @db.VarChar(2)
  genshinCharacterId String?
  level              Int
  name               String
  description        String

  GenshinCharacter GenshinCharacter? @relation(fields: [genshinCharacterId], references: [id], onDelete: Cascade)

  @@unique([lang, level, genshinCharacterId])
}
